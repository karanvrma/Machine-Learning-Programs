import pandas as pd
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler

iris = load_iris() x = iris.data
y = iris.target

x = StandardScaler().fit_transform(x)

from sklearn.decomposition import PCA pca = PCA(n_components=2)
principalComponents = pca.fit_transform(x)
principalDf = pd.DataFrame(data = principalComponents, columns = ['principal component 1', 'principal component 2'])

finalDf = pd.concat([principalDf, pd.DataFrame(data = iris.target, columns = ['target'])[['target']]], axis = 1)

import matplotlib.pyplot as plt

fig = plt.figure(figsize = (8,8)) ax = fig.add_subplot(1,1,1)
ax.set_xlabel('Principal Component 1', fontsize = 15)
ax.set_ylabel('Principal Component 2', fontsize = 15) ax.set_title('2 component PCA', fontsize = 20) targets = [0, 1, 2]
colors = ['r', 'g', 'b']
for target, color in zip(targets, colors): 
  indicesToKeep = finalDf['target'] == target
  ax.scatter(finalDf.loc[indicesToKeep, 'principal component 1']
, finalDf.loc[indicesToKeep, 'principal component 2']
, c = color, s = 50)
ax.legend(iris.target_names) 
ax.grid()
plt.show()
