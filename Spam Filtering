import pandas as pd
import numpy as np
import os
import string
from nltk.corpus import stopwords
from sklearn.feature_extraction.text import CountVectorizer
from nltk import PorterStemmer as Stemmer
import re


data=pd.read_csv('spam.csv' ,encoding='latin-1')

corpus=[]

def process(text):
    
     
     text = text.lower()
     
     text = ''.join([t for t in text if t not in string.punctuation])
     
     text = [t for t in text.split() if t not in stopwords.words('english')]
     
     st = Stemmer()
     text = [st.stem(t) for t in text]
     
     text=' '.join(text)
     return text
 
    
corpus= data['v2'].apply(process) 


from sklearn.preprocessing import LabelEncoder
y=data["Column1"]
le = LabelEncoder()
y = le.fit_transform(y)



cv = CountVectorizer()
X = cv.fit_transform(corpus).toarray()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size= 0.20, random_state = 0)
from sklearn.naive_bayes import MultinomialNB
clf = MultinomialNB()
clf.fit(X_train,y_train)


from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
y_pred = clf.predict(X_test)
#cm = confusion_matrix(y_test, y_pred)

print ("Accuracy : %f \n\n" % accuracy_score(y_test, clf.predict(X_test)))

from sklearn.metrics import classification_report
print (classification_report(y_test, clf.predict(X_test)))
